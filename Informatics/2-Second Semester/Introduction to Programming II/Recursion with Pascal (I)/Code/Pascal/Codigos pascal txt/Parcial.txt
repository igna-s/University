Program TPGrupoX;
Uses
     sysutils;
Type
     str70= string[70];

	 jugador = record
        DNI: longint;
	    nombre_apellido: str70;
        equipo: str70;
	    goles: integer;
     end;

     lista = ^nodoLista;
     nodoLista = record
	    dato: jugador;
	    sig: lista;
     end;

	fecha=record
		dia:1..31;
		mes:1..12;
		anio:integer;
	end;

    partido= record
		identificador: longint;
		local: str70;
		visitante: str70;
		fecha_partido: fecha;
        estadio: str70;
		goleadores: lista;
     end;

     listaPartidos = ^nodoPartidos;
     nodoPartidos = record
            dato: partido;
            sig: listaPartidos;
     end;

     nombres= array [1..20] of str70;

     //  INICIO
{DATOS DE FECHA Y PUNTAJE}
  datosp=record
    fechas:fecha;
    goles:integer;
  end;
{LISTA DE PUNTAJES Y SUS DATOS}
listap=^nodop;
  nodop=record
   datos:datosp;
   sig:listap;
  end;
{DATOS JUGADOR Y SU LISTA DE PUNTAJE}
  datosj=record
    nombr_apell:str70;
    equipo:str70;
    listapuntaje:listap;
  end;
{ARBOL DE DNI CON LOS DATOS DE JUGADOR}
arbolj=^nodoj;
  nodoj=record
    dni:longint;
    jugador:datosj;
    HI:arbolj;
    HD:arbolj;
  end;

// FIN

     {Completar con los tipos de datos necesarios}

procedure cargarFecha(var f: fecha);
begin
  f.dia:= random(30)+1;
  f.mes := random(12)+1;
  if(f.mes = 2) and (f.dia > 28)then
	f.dia := 28
  else
	if((f.mes = 4) or (f.mes = 6) or (f.mes =9) or (f.mes = 11)) and (f.dia = 31)then
		f.dia := 30;
  f.anio:=2022;
end;

Procedure agregar(var l: listaPartidos; p: partido);
var
   aux: listaPartidos;
begin
     new(aux);
     aux^.dato := p;
     aux^.sig := l;
     l:= aux;
end;

Procedure agregarJugador(var l: lista; j: jugador);
var
   aux: lista;
begin
     new(aux);
     aux^.dato := j;
     aux^.sig := l;
     l:= aux;
end;

procedure cargarEquipos(var v:nombres );
begin
     v[1]:='Atletico Tucuman';
     v[2]:='Huracan';
     v[3]:='Gimnasia LP';
     v[4]:='Godoy Cruz';
     v[5]:='Argentino Juniors';
     v[6]:='River';
     v[7]:='Boca';
     v[8]:='Racing';
     v[9]:='Platense';
     v[10]:='San Lorenzo';
     v[11]:='Patronato';
     v[12]:='Estudiantes';
     v[13]:='Union';
     v[14]:='Newells';
     v[15]:='Barracas';
     v[16]:='Tigre';
     v[17]:='Arsenal';
     v[18]:='Sarmiento';
     v[19]:='Central';
     v[20]:='Colon';
end;

procedure cargarJugadores(var l: lista; local, visitante:str70);
var
   j: jugador;
   cant, i, pos, loc_vis: integer;
   v: nombres;
begin
     cant := random(2);
     v[1]:='Lionel Perez';
     v[2]:='Martin Fernandez';
     v[3]:='Mariano Gomez';
     v[4]:='Alejandro Gonzalez';
     v[5]:='Fermin Martinez';
     v[6]:='Nicolas Castro';
     v[7]:='Gonzalo Villareal';
     v[8]:='Tadeo Parodi';
     v[9]:='Juan Pablo Silvestre';
     v[10]:='Mariano Sanchez';
     v[11]:='Alejo Monden';
     v[12]:='Agustin Paz';
     v[13]:='Juan Salto';
     v[14]:='Matias Pidone';
     v[15]:='Luis Hernandez';
     v[16]:='Cristian Herrera';
     v[17]:='Santiago Manzur';
     v[18]:='Julian Darino';
     v[19]:='Victor Abila';
     v[20]:='Luciano Segura';
     if((local='Colon')or(visitante='Colon'))then
     begin
        with(j) do begin
           DNI := 34807474;
           nombre_apellido:='Leandro Romanut';
		   equipo:='Colon';
		   goles:=random(3)+1;
        end;
        agregarJugador(l, j);
     end;
     for i:=1 to cant do
     begin
       with(j) do begin
          DNI := random(18000000)+20000000;;
          pos:= random(20)+1;
          nombre_apellido:= v[pos];
          loc_vis:= random(2)+1;
          if(loc_vis=1)then
            equipo:=local
          else
            equipo:=visitante;
	      goles:=random(3)+1;
       end;
       agregarJugador(l, j);
     end;
end;

procedure crearLista(var l: listaPartidos);
var
   p: partido;
   cant,i,pos,loc,vis: integer;
   v, v2: nombres;
begin
     cant := random(20)+1;
     v[1]:= 'Antonio Vespucio Liberti';
     v[2]:= 'Mario Alberto Kempes';
     v[3]:= 'Alberto Armando';
     v[4]:= 'Ciudad de La Plata';
     v[5]:= 'Presidente Peron';
     v[6]:= 'Jose Amalfitani';
     v[7]:= 'Tomas Adolfo Duco';
     v[8]:= 'Libertadores de America';
     v[9]:= 'Pedro Bidegain';
     v[10]:= 'Nestor Diaz Perez';
     v[11]:= 'Marcelo Bielsa';
     v[12]:= 'Gigante de Arroyito';
     v[13]:= 'Malvinas Argentinas';
     v[14]:= 'Brigadier General Estanislao Lopez';
     v[15]:= 'Eduardo Gallardon';
     v[16]:= 'Jose Maria Minella';
     v[17]:= 'Florencio Sola';
     v[18]:= 'Monumental Jose Fierro';
     v[19]:= 'Nueva Espa√±a';
     v[20]:= 'Nuevo Francisco Urbano';
     cargarEquipos(v2);
     for i:=1 to cant do
     begin
          with(p) do begin
               identificador:= random (100000)+1;
               pos:= random(20)+1;
               estadio:= v[pos];
               loc:= random(20)+1;
               local:=v2[loc];
               vis:= random(20)+1;
               visitante:=v2[vis];
               while(local=visitante)do
               begin
                   vis:= random(20)+1;
                   visitante:=v2[vis];
               end;
               cargarFecha(fecha_partido);
               goleadores:= nil;
               cargarJugadores(goleadores, local, visitante);
          end;
          agregar(l, p);
       end;
end;


procedure imprimirJugador(j: jugador);
begin
     with (j) do begin
          writeln('JUGADOR: ', nombre_apellido, ' | DNI: ',DNI, ' | EQUIPO: ', equipo, ' | GOLES: ', goles);
     end;
end;

procedure imprimirJugadores(l: lista);
begin
     while (l <> nil) do begin
          imprimirJugador(l^.dato);
          l:= l^.sig;
     end;
end;

procedure imprimir(p: partido);
begin
     with (p) do begin
          writeln('');
          writeln('PARTIDO: ', identificador, ' | EQ. LOCAL: ',local, ' | EQ. VISITANTE: ', visitante, ' | FECHA: ', fecha_partido.dia,'/',fecha_partido.mes,'/',fecha_partido.anio, ' | ESTADIO: ', estadio);
          imprimirJugadores(goleadores);
     end;
end;

procedure imprimirLista(l: listaPartidos);
begin
     while (l <> nil) do begin
          imprimir(l^.dato);
          l:= l^.sig;
     end;
end;


//INICIO
//Procedure insrt_puntaje: inserta en la lista de goles y fechas
procedure insrt_listapuntaje(var lp:listap;aux:fecha;gol:integer);
var
   a:listap;
begin
  new(a);
  a^.datos.fechas:=aux;
  a^.datos.goles:=gol;
  a^.sig:=lp;
  lp:=a;
end;
   // Procedure insertararbol: inserta en arbol
procedure insertararbol(j:jugador;var a:arbolj; aux:fecha);
begin
  if a = nil then begin
    new(a);
    a^.Jugador.listapuntaje:=nil;
    a^.dni:=j.dni;
    a^.jugador.nombr_apell:=j.nombre_Apellido;
    a^.jugador.equipo:=j.equipo;
    insrt_listapuntaje(a^.Jugador.listapuntaje,aux,j.goles);
    a^.HI:=NIL;
    a^.HD:=NIL;
  end
  else if (a^.dni > j.dni) then insertararbol(j,a^.HI,aux)
    else if (a^.dni < j.dni) then insertararbol(j,a^.HD,aux)
    else
         insrt_listapuntaje(a^.Jugador.listapuntaje,aux,j.goles);
end;
// Procedure ARBOLENTEROS: Se queda con los datos de la lista de partidos y manda la lista a insertararbol
procedure arbolenteros(l:listapartidos;var a:arbolj);
var
   aux:fecha;
  begin
    while l<>nil do begin
       aux:=l^.dato.fecha_partido;
        while l^.dato.goleadores<>nil do begin
          insertararbol(l^.dato.goleadores^.dato,a,aux);
          l^.dato.goleadores:=l^.dato.goleadores^.sig;
        end;
      l:=l^.sig;
    end;
  end;
// Procedure CONTARGOLES: Cuenta goles en lista (Complemento Procedure Maximo)
 procedure contargoles(l:listap;var suma:integer);
begin
  suma:=0;
  while l<>nil do begin
    suma:= suma + l^.datos.goles;
    l:=l^.sig;
  end;
end;
 //// Procedure maximo: Encuentra maximo de goles
Procedure maximo( a: arbolj;var max:integer; var equipo: str70 );
  var
     suma: integer;
  begin

  if ( a <> nil ) then begin
    maximo (a^.HI,max,equipo);
    contargoles(a^.jugador.listapuntaje, suma);
    if suma>max then begin
    max:=suma;
    equipo:=a^.jugador.equipo;
    end;
    maximo (a^.HD,max,equipo);

  end;
end;

// Procedure Busquedaacotada: imprime un rango de dnis
procedure BusquedaAcotada(a: Arbolj; inf,sup:integer);
begin
  if (a <> nil) then
    if (a^.dni >= inf) then
      if (a^.dni <= sup) then begin
        write('DNI= ',a^.dni,'   ');
        write('Nombre y Apellido= ',a^.jugador.nombr_apell,'   ');
        writeln('   ');
        busquedaAcotada(a^.hi, inf, sup);
        busquedaAcotada (a^.hd, inf, sup);
      end
      else
        busquedaAcotada(a^.hi, inf, sup)
    else
      busquedaAcotada(a^.hd, inf, sup);
end;
 // Function eorden: corre un dni del arbol (Complemeto BORRAR ELEMENTO)
function eOrden( a: arbolj ):longint;
begin
  if ( a^.Hi <> nil ) then
    eOrden:= eOrden (a^.HI)
     else
         eOrden:= a^.dni;
  end;
 // Procedure BORRARELEMENTO: borra un dni del arbol
Procedure borrarElemento ( var a: arbolj; dato: longint; var exito: boolean);
var
   x:integer;
   aux:arbolj;
begin
  if (a = nil) then exito:= false
  else if a^.dni > dato then begin
      borrarElemento (a^.hi, dato, exito)
    end
    else
      if a^.dni < dato then begin
        borrarElemento (a^.hd, dato, exito);
      end
      else begin
        exito:= true;
        if (a^.Hd = nil) and (a^.Hi = nil) then begin
            aux:=a;
            a:= nil ;
            dispose(aux);
            end
          else if (a^.Hi = nil)  then begin
            aux:=a;
            a:= a^.Hd ;
            dispose(aux);

          end
            else if (a^.Hd = nil)  then begin
            aux:=a;
            a:= a^.Hi ;
            dispose(aux);

            end
            else begin
             x:= eOrden (a^.HD);
             a^.dni:= x;
             borrarElemento (a^.hd, x, exito);
            end;
         end;
end;
// Procedure enOrden: Imprime el arbol (DNI)
Procedure enOrden( a: arbolj );
begin
  if ( a <> nil ) then begin
    enOrden (a^.HI);
    write (a^.dni, '   ');
    enOrden (a^.HD);

  end;
end;
//FIN
var
   l: listaPartidos;
   a:arbolj;
   equipo:str70;
   max: integer;
   exito: boolean;
begin
     Randomize;
     a:=nil;
     max:=-1;
     l:= nil;
     crearLista(l); {carga automatica de la estructura disponible}
     writeln ('LISTA GENERADA: ');
     imprimirLista(l);
     //  Agregado
     writeln ('-------------------------------');
     arbolenteros(l,a);
     writeln ('     ');
     maximo(a,max,equipo);
     writeln ('El jugador goleador del torneo esta en el equipo= ',equipo);
     writeln ('     ');
      writeln ('Los jugadores en el rango solicitado son:    ');
     busquedaacotada(a,28000000,32000000);
     writeln ('    ');
     write (' Lista:     ');
     enorden(a);
     writeln ('    ');
     borrarelemento(a,34807474,exito) ;
     if exito = true then writeln (' El jugador 34807474 fue eliminado')
     else writeln ('El jugador 34807474 no existe');
     write (' Lista 2.0:  ');
     enorden(a);
     //  Fin
     writeln('Fin del programa');
     readln;
end.