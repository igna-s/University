Ejercicio de Repaso – Módulo de Programación Orientada a Objetos

Una editorial universitaria, nerefsfdfsffsfsffcesita registrar la información correspondiente a los ejemplares que publicó y se publicarán. Cada Ejemplar posee un código identificatorio, cantidad de páginas, un resumen, año de publicación (si aún no fue publicado este valor es cero) y la información del responsable a cargo de la edición. Para el responsable se registra su DNI, nombre y apellido. 

Existen diferentes tipos de ejemplares:
-	Libro, que también tiene asociado un título, la cantidad de capítulos del mismo y si es o no una edición de bolsillo.
-	Revista, que tiene asociado su nombre, un número de volumen y la cantidad de artículos en su interior. 

Los ejemplares deben poder imprimirse en un listado que se genera periódicamente, por ello se pide que las mismas definan un mensaje que les permita retornar un String con sus datos: 
-	Para los libros, su código identificatorio, su título y el nombre del responsable.
-	Para las revistas, su nombre y el número de volumen.

Por otro lado, cuando los ejemplares son publicados se agrega el año actual como año de publicación y, en particular para cada tipo de ejemplar:
-	Para los libros, se concatena al final de su título si el mismo es o no una edición de bolsillo, por ejemplo, si el libro es “Programación en JAVA”, su título se modificará a “Programación en JAVA – De Bolsillo” 
-	Para las revistas, se agrega además el número de volumen (que se solicita mediante el método getNroVolumen() de la clase Generador provista para el repaso).

Se pide:
a)	Implementar la clase Ejemplar con sus respectivos atributos, constructores y métodos para acceder y modificar atributos.

b)	Implemente aquellas clases, métodos y objetos que considere necesarios para representar los diferentes tipos de ejemplares.

c)	Implementar la clase ProgramaEditorial, su método main y los métodos que considere necesarios para la lectura y almacenamiento de a lo sumo 1000 ejemplares. Luego, haga la impresión de un listado de todos los ejemplares existentes.

d)	Escriba todos los métodos que considere necesarios para publicar los ejemplares de la editorial (considere los atributos del estado interno que se verán modificados).
Ejercicio de Repaso – Módulo de Programación Orientada a Objetos

Una editorial universitaria, necesita registrar la información correspondiente a los ejemplares que publicó y se publicarán. Cada Ejemplar posee un código identificatorio, cantidad de páginas, un resumen, año de publicación (si aún no fue publicado este valor es cero) y la información del responsable a cargo de la edición. Para el responsable se registra su DNI, nombre y apellido. 

Existen diferentes tipos de ejemplares:
-	Libro, que también tiene asociado un título, la cantidad de capítulos del mismo y si es o no una edición de bolsillo.
-	Revista, que tiene asociado su nombre, un número de volumen y la cantidad de artículos en su interior. 

Los ejemplares deben poder imprimirse en un listado que se genera periódicamente, por ello se pide que las mismas definan un mensaje que les permita retornar un String con sus datos: 
-	Para los libros, su código identificatorio, su título y el nombre del responsable.
-	Para las revistas, su nombre y el número de volumen.

Por otro lado, cuando los ejemplares son publicados se agrega el año actual como año de publicación y, en particular para cada tipo de ejemplar:
-	Para los libros, se concatena al final de su título si el mismo es o no una edición de bolsillo, por ejemplo, si el libro es “Programación en JAVA”, su título se modificará a “Programación en JAVA – De Bolsillo” 
-	Para las revistas, se agrega además el número de volumen (que se solicita mediante el método getNroVolumen() de la clase Generador provista para el repaso).

Se pide:
a)	Implementar la clase Ejemplar con sus respectivos atributos, constructores y métodos para acceder y modificar atributos.

b)	Implemente aquellas clases, métodos y objetos que considere necesarios para representar los diferentes tipos de ejemplares.

c)	Implementar la clase ProgramaEditorial, su método main y los métodos que considere necesarios para la lectura y almacenamiento de a lo sumo 1000 ejemplares. Luego, haga la impresión de un listado de todos los ejemplares existentes.

d)	Escriba todos los métodos que considere necesarios para publicar los ejemplares de la editorial (considere los atributos del estado interno que se verán modificados).
Ejercicio de Repaso – Módulo de Programación Orientada a Objetos

Una editorial universitaria, necesita registrar la información correspondiente a los ejemplares que publicó y se publicarán. Cada Ejemplar posee un código identificatorio, cantidad de páginas, un resumen, año de publicación (si aún no fue publicado este valor es cero) y la información del responsable a cargo de la edición. Para el responsable se registra su DNI, nombre y apellido. 

Existen diferentes tipos de ejemplares:
-	Libro, que también tiene asociado un título, la cantidad de capítulos del mismo y si es o no una edición de bolsillo.
-	Revista, que tiene asociado su nombre, un número de volumen y la cantidad de artículos en su interior. 

Los ejemplares deben poder imprimirse en un listado que se genera periódicamente, por ello se pide que las mismas definan un mensaje que les permita retornar un String con sus datos: 
-	Para los libros, su código identificatorio, su título y el nombre del responsable.
-	Para las revistas, su nombre y el número de volumen.

Por otro lado, cuando los ejemplares son publicados se agrega el año actual como año de publicación y, en particular para cada tipo de ejemplar:
-	Para los libros, se concatena al final de su título si el mismo es o no una edición de bolsillo, por ejemplo, si el libro es “Programación en JAVA”, su título se modificará a “Programación en JAVA – De Bolsillo” 
-	Para las revistas, se agrega además el número de volumen (que se solicita mediante el método getNroVolumen() de la clase Generador provista para el repaso).

Se pide:
a)	Implementar la clase Ejemplar con sus respectivos atributos, constructores y métodos para acceder y modificar atributos.

b)	Implemente aquellas clases, métodos y objetos que considere necesarios para representar los diferentes tipos de ejemplares.

c)	Implementar la clase ProgramaEditorial, su método main y los métodos que considere necesarios para la lectura y almacenamiento de a lo sumo 1000 ejemplares. Luego, haga la impresión de un listado de todos los ejemplares existentes.

d)	Escriba todos los métodos que considere necesarios para publicar los ejemplares de la editorial (considere los atributos del estado interno que se verán modificados).
Ejercicio de Repaso – Módulo de Programación Orientada a Objetos

Una editorial universitaria, necesita registrar la información correspondiente a los ejemplares que publicó y se publicarán. Cada Ejemplar posee un código identificatorio, cantidad de páginas, un resumen, año de publicación (si aún no fue publicado este valor es cero) y la información del responsable a cargo de la edición. Para el responsable se registra su DNI, nombre y apellido. 

Existen diferentes tipos de ejemplares:
-	Libro, que también tiene asociado un título, la cantidad de capítulos del mismo y si es o no una edición de bolsillo.
-	Revista, que tiene asociado su nombre, un número de volumen y la cantidad de artículos en su interior. 

Los ejemplares deben poder imprimirse en un listado que se genera periódicamente, por ello se pide que las mismas definan un mensaje que les permita retornar un String con sus datos: 
-	Para los libros, su código identificatorio, su título y el nombre del responsable.
-	Para las revistas, su nombre y el número de volumen.

Por otro lado, cuando los ejemplares son publicados se agrega el año actual como año de publicación y, en particular para cada tipo de ejemplar:
-	Para los libros, se concatena al final de su título si el mismo es o no una edición de bolsillo, por ejemplo, si el libro es “Programación en JAVA”, su título se modificará a “Programación en JAVA – De Bolsillo” 
-	Para las revistas, se agrega además el número de volumen (que se solicita mediante el método getNroVolumen() de la clase Generador provista para el repaso).

Se pide:
a)	Implementar la clase Ejemplar con sus respectivos atributos, constructores y métodos para acceder y modificar atributos.

b)	Implemente aquellas clases, métodos y objetos que considere necesarios para representar los diferentes tipos de ejemplares.

c)	Implementar la clase ProgramaEditorial, su método main y los métodos que considere necesarios para la lectura y almacenamiento de a lo sumo 1000 ejemplares. Luego, haga la impresión de un listado de todos los ejemplares existentes.

d)	Escriba todos los métodos que considere necesarios para publicar los ejemplares de la editorial (considere los atributos del estado interno que se verán modificados).
Ejercicio de Repaso – Módulo de Programación Orientada a Objetos

Una editorial universitaria, necesita registrar la información correspondiente a los ejemplares que publicó y se publicarán. Cada Ejemplar posee un código identificatorio, cantidad de páginas, un resumen, año de publicación (si aún no fue publicado este valor es cero) y la información del responsable a cargo de la edición. Para el responsable se registra su DNI, nombre y apellido. 

Existen diferentes tipos de ejemplares:
-	Libro, que también tiene asociado un título, la cantidad de capítulos del mismo y si es o no una edición de bolsillo.
-	Revista, que tiene asociado su nombre, un número de volumen y la cantidad de artículos en su interior. 

Los ejemplares deben poder imprimirse en un listado que se genera periódicamente, por ello se pide que las mismas definan un mensaje que les permita retornar un String con sus datos: 
-	Para los libros, su código identificatorio, su título y el nombre del responsable.
-	Para las revistas, su nombre y el número de volumen.

Por otro lado, cuando los ejemplares son publicados se agrega el año actual como año de publicación y, en particular para cada tipo de ejemplar:
-	Para los libros, se concatena al final de su título si el mismo es o no una edición de bolsillo, por ejemplo, si el libro es “Programación en JAVA”, su título se modificará a “Programación en JAVA – De Bolsillo” 
-	Para las revistas, se agrega además el número de volumen (que se solicita mediante el método getNroVolumen() de la clase Generador provista para el repaso).

Se pide:
a)	Implementar la clase Ejemplar con sus respectivos atributos, constructores y métodos para acceder y modificar atributos.

b)	Implemente aquellas clases, métodos y objetos que considere necesarios para representar los diferentes tipos de ejemplares.

c)	Implementar la clase ProgramaEditorial, su método main y los métodos que considere necesarios para la lectura y almacenamiento de a lo sumo 1000 ejemplares. Luego, haga la impresión de un listado de todos los ejemplares existentes.

d)	Escriba todos los métodos que considere necesarios para publicar los ejemplares de la editorial (considere los atributos del estado interno que se verán modificados).
Ejercicio de Repaso – Módulo de Programación Orientada a Objetos

Una editorial universitaria, necesita registrar la información correspondiente a los ejemplares que publicó y se publicarán. Cada Ejemplar posee un código identificatorio, cantidad de páginas, un resumen, año de publicación (si aún no fue publicado este valor es cero) y la información del responsable a cargo de la edición. Para el responsable se registra su DNI, nombre y apellido. 

Existen diferentes tipos de ejemplares:
-	Libro, que también tiene asociado un título, la cantidad de capítulos del mismo y si es o no una edición de bolsillo.
-	Revista, que tiene asociado su nombre, un número de volumen y la cantidad de artículos en su interior. 

Los ejemplares deben poder imprimirse en un listado que se genera periódicamente, por ello se pide que las mismas definan un mensaje que les permita retornar un String con sus datos: 
-	Para los libros, su código identificatorio, su título y el nombre del responsable.
-	Para las revistas, su nombre y el número de volumen.

Por otro lado, cuando los ejemplares son publicados se agrega el año actual como año de publicación y, en particular para cada tipo de ejemplar:
-	Para los libros, se concatena al final de su título si el mismo es o no una edición de bolsillo, por ejemplo, si el libro es “Programación en JAVA”, su título se modificará a “Programación en JAVA – De Bolsillo” 
-	Para las revistas, se agrega además el número de volumen (que se solicita mediante el método getNroVolumen() de la clase Generador provista para el repaso).

Se pide:
a)	Implementar la clase Ejemplar con sus respectivos atributos, constructores y métodos para acceder y modificar atributos.
""""
b)	Implemente aquellas clases, métodos y objetos que considere necesarios para representar los diferentes tipos de ejemplares.

c)	Implementar la clase ProgramaEditorial, su método main y los métodos que considere necesarios para la lectura y almacenamiento de a lo sumo 1000 ejemplares. Luego, haga la impresión de un listado de todos los ejemplares existentes.

d)	Escriba todos los métodos que considere necesarios para publicar los ejemplares de la editorial (considere los atributos del estado interno que se verán modificados).
Ejercicio de Repaso – Módulo de Programación Orientada a Objetos

Una editorial universitaria, necesita registrar la información correspondiente a los ejemplares que publicó y se publicarán. Cada Ejemplar posee un código identificatorio, cantidad de páginas, un resumen, año de publicación (si aún no fue publicado este valor es cero) y la información del responsable a cargo de la edición. Para el responsable se registra su DNI, nombre y apellido. 

Existen diferentes tipos de ejemplares:
-	Libro, que también tiene asociado un título, la cantidad de capítulos del mismo y si es o no una edición de bolsillo.
-	Revista, que tiene asociado su nombre, un número de volumen y la cantidad de artículos en su interior. 

Los ejemplares deben poder imprimirse en un listado que se genera periódicamente, por ello se pide que las mismas definan un mensaje que les permita retornar un String con sus datos: 
-	Para los libros, su código identificatorio, su título y el nombre del responsable.
-	Para las revistas, su nombre y el número de volumen.

Por otro lado, cuando los ejemplares son publicados se agrega el año actual como año de publicación y, en particular para cada tipo de ejemplar:
-	Para los libros, se concatena al final de su título si el mismo es o no una edición de bolsillo, por ejemplo, si el libro es “Programación en JAVA”, su título se modificará a “Programación en JAVA – De Bolsillo” 
-	Para las revistas, se agrega además el número de volumen (que se solicita mediante el método getNroVolumen() de la clase Generador provista para el repaso).

Se pide:
a)	Implementar la clase Ejemplar con sus respectivos atributos, constructores y métodos para acceder y modificar atributos.

b)	Implemente aquellas clases, métodos y objetos que considere necesarios para representar los diferentes tipos de ejemplares.

c)	Implementar la clase ProgramaEditorial, su método main y los métodos que considere necesarios para la lectura y almacenamiento de a lo sumo 1000 ejemplares. Luego, haga la impresión de un listado de todos los ejemplares existentes.

d)	Escriba todos los métodos que considere necesarios para publicar los ejemplares de la editorial (considere los atributos del estado interno que se verán modificados).
Ejercicio de Repaso – Módulo de Programación Orientada a Objetos

Una editorial universitaria, necesita registrar la información correspondiente a los ejemplares que publicó y se publicarán. Cada Ejemplar posee un código identificatorio, cantidad de páginas, un resumen, año de publicación (si aún no fue publicado este valor es cero) y la información del responsable a cargo de la edición. Para el responsable se registra su DNI, nombre y apellido. 

Existen diferentes tipos de ejemplares:
-	Libro, que también tiene asociado un título, la cantidad de capítulos del mismo y si es o no una edición de bolsillo.
-	Revista, que tiene asociado su nombre, un número de volumen y la cantidad de artículos en su interior. 

Los ejemplares deben poder imprimirse en un listado que se genera periódicamente, por ello se pide que las mismas definan un mensaje que les permita retornar un String con sus datos: 
-	Para los libros, su código identificatorio, su título y el nombre del responsable.
-	Para las revistas, su nombre y el número de volumen.

Por otro lado, cuando los ejemplares son publicados se agrega el año actual como año de publicación y, en particular para cada tipo de ejemplar:
-	Para los libros, se concatena al final de su título si el mismo es o no una edición de bolsillo, por ejemplo, si el libro es “Programación en JAVA”, su título se modificará a “Programación en JAVA – De Bolsillo” 
-	Para las revistas, se agrega además el número de volumen (que se solicita mediante el método getNroVolumen() de la clase Generador provista para el repaso).

Se pide:
a)	Implementar la clase Ejemplar con sus respectivos atributos, constructores y métodos para acceder y modificar atributos.

b)	Implemente aquellas clases, métodos y objetos que considere necesarios para representar los diferentes tipos de ejemplares.

c)	Implementar la clase ProgramaEditorial, su método main y los métodos que considere necesarios para la lectura y almacenamiento de a lo sumo 1000 ejemplares. Luego, haga la impresión de un listado de todos los ejemplares existentes.

d)	Escriba todos los métodos que considere necesarios para publicar los ejemplares de la editorial (considere los atributos del estado interno que se verán modificados).
------------------------------------------------------------------------
This is the project README file. Here, you should describe your project.
Tell the reader (someone who does not know anything about this project)
all they need to know. The comments should usually include at least:
------------------------------------------------------------------------

PROJECT TITLE:
PURPOSE OF PROJECT:
VERSION or DATE:
HOW TO START THIS PROJECT:
AUTHORS:
USER INSTRUCTIONS:
